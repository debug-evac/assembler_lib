on:
  pull_request:
    branches: [main, stable]
    types: [opened, synchronize, reopened, ready_for_review]
    paths: ['src/**.rs']

name: Code quality assurance (open and mergable pull requests)

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    if: gitea.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'Prj-MR/assembler-crates'
          ref: 'main'
          token: ${{ secrets.GT_PAT }}
          fetch-depth: '0'
          submodules: true
      - name: Setup correct branch on submodule
        run: |
          git -C ./${{ gitea.event.repository.name }} fetch --depth=1 origin ${{ gitea.head_ref }}
          branch=$( echo ${{ gitea.head_ref }} | sed 's/refs\/heads\///g' )
          git -C ./${{ gitea.event.repository.name }} checkout ${branch}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p ${{ gitea.event.repository.name }}

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: gitea.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'Prj-MR/assembler-crates'
          ref: 'main'
          token: ${{ secrets.GT_PAT }}
          fetch-depth: '0'
          submodules: true
      - name: Setup correct branch on submodule
        run: |
          git -C ./${{ gitea.event.repository.name }} fetch --depth=1 origin ${{ gitea.head_ref }}
          branch=$( echo ${{ gitea.head_ref }} | sed 's/refs\/heads\///g' )
          git -C ./${{ gitea.event.repository.name }} checkout ${branch}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p ${{ gitea.event.repository.name }} -- -D warnings

  test-all:
    name: Test Suite (all features)
    runs-on: ubuntu-latest
    if: gitea.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'Prj-MR/assembler-crates'
          ref: 'main'
          token: ${{ secrets.GT_PAT }}
          fetch-depth: '0'
          submodules: true
      - name: Setup correct branch on submodule
        run: |
          git -C ./${{ gitea.event.repository.name }} fetch --depth=1 origin ${{ gitea.head_ref }}
          branch=$( echo ${{ gitea.head_ref }} | sed 's/refs\/heads\///g' )
          git -C ./${{ gitea.event.repository.name }} checkout ${branch}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p ${{ gitea.event.repository.name }} --features full_nop

  fail_if_pr_draft:
    if: gitea.event.pull_request.draft == true
    runs-on: ubuntu-latest
    steps:
      - name: Fail when pr is draft
        uses: actions/github-script@v3
        with:
          script: core.setFailed('PR is a draft and therefore will not be checked at the moment!')
